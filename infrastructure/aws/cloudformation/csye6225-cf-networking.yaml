---
Description: >-
  Network stack.
AWSTemplateFormatVersion: 2010-09-09
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.31.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Join
          - ''
          - - !Ref AWS::StackName 
            - '-csye6225-vpc'
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Join
          - ''
          - - !Ref AWS::StackName 
            - '-csye6225-vpc'
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  SubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.31.0.0/20
      MapPublicIpOnLaunch: true
      AvailabilityZone: us-east-1a
  SubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.31.16.0/20
      MapPublicIpOnLaunch: true
      AvailabilityZone: us-east-1b
  SubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 172.31.32.0/20
      MapPublicIpOnLaunch: true
      AvailabilityZone: us-east-1c
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Join
          - ''
          - - !Ref AWS::StackName 
            - '-csye6225-rt'
  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
  SubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetA
  SubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetB
  SubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetC
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "Internet Group"
      GroupDescription: "SSH traffic in, all traffic out."
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        CidrIp: 0.0.0.0/0

Outputs:
  VPC:
    Description: vpc Id
    Value:
      !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-VPC
  SubnetA:
    Description: subnet ID A
    Value:
      !Ref SubnetA
    Export:
      Name: !Sub ${AWS::StackName}-SubnetA
  SubnetB:
    Description: Subnet Id B
    Value:
      !Ref SubnetB
    Export:
      Name: !Sub ${AWS::StackName}-SubnetB
  SubnetC:
    Description: Subnet Id C
    Value:
      !Ref SubnetC
    Export:
      Name: !Sub ${AWS::StackName}-SubnetC
  SecurityGroup:
    Description: SecurityGroup id
    Value:
      !Ref SecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroup