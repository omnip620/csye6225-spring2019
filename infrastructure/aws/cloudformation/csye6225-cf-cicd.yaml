

Parameters:
  RESOURCE1:
    Type: "String"
  RESOURCE2:
    Type: "String"
  RESOURCE3:
    Type: "String"
  RESOURCE4:
    Type: "String"

Resources:
  # IAMPolicy:
  #   Type: AWS::IAM::Policy
  #   Properties: 
  #     PolicyName: "circleci-ec2-ami"
  #     PolicyDocument: 
  #       Version: 2012-10-17
  #       Statement:
  #         - 
  #           Effect: Allow
  #           Action:
  #             - ec2:AttachVolume
  #             - ec2:AuthorizeSecurityGroupIngress
  #             - ec2:CopyImage
  #             - ec2:CreateImage
  #             - ec2:CreateKeypair
  #             - ec2:CreateSecurityGroup
  #             - ec2:CreateSnapshot
  #             - ec2:CreateTags
  #             - ec2:CreateVolume
  #             - ec2:DeleteKeyPair
  #             - ec2:DeleteSecurityGroup
  #             - ec2:DeleteSnapshot
  #             - ec2:DeleteVolume
  #             - ec2:DeregisterImage
  #             - ec2:DescribeImageAttribute
  #             - ec2:DescribeImages
  #             - ec2:DescribeInstances
  #             - ec2:DescribeInstanceStatus
  #             - ec2:DescribeRegions
  #             - ec2:DescribeSecurityGroups
  #             - ec2:DescribeSnapshots
  #             - ec2:DescribeSubnets
  #             - ec2:DescribeTags
  #             - ec2:DescribeVolumes
  #             - ec2:DetachVolume
  #             - ec2:GetPasswordData
  #             - ec2:ModifyImageAttribute
  #             - ec2:ModifyInstanceAttribute
  #             - ec2:ModifySnapshotAttribute
  #             - ec2:RegisterImage
  #             - ec2:RunInstances
  #             - ec2:StopInstances
  #             - ec2:TerminateInstances
  #           Resource: '*'
  #     Users:
  #       - 
  #         "circleci"
  CodeDeployS3Policy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: CodeDeploy-EC2-S3
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Action:
              - 's3:Get*'
              - 's3:List*'
            Effect: Allow
            Resource: '*'
      Roles:
        - !Ref CodeDeployEC2ServiceRole
  CircleCIUploadPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties: 
      ManagedPolicyName: CircleCI-Upload-To-S3
      Users:
        - "circleci"
      PolicyDocument: 
        Version: "2012-10-17"   
        Statement:
          - Effect: Allow
            Action:
              - 's3:PutObject'
            Resourse: '*'
            # Resource:
            #   - "csye6225-spring2019-wangshiyu3.me.csye6225.com"
  CircleCIDeployPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties: 
      ManagedPolicyName: CirlceCI-Code-Deploy
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - codedeploy:RegisterApplicationRevision
              - codedeploy:GetApplicationRevision
            Resource:
              - !Ref RESOURCE1
          - Effect: Allow
            Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetDeployment
            Resource: '*'
          - Effect: Allow
            Action:
              - codedeploy:GetDeploymentConfig
            Resource:
              - !Ref RESOURCE2
              - !Ref RESOURCE3
              - !Ref RESOURCE4
      Users:
        - circleci
  CodeDeployEC2ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      RoleName: CodeDeployEC2ServiceRole
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codedeploy.amazonaws.com
          Action:
          - sts:AssumeRole
      RoleName: CodeDeployServiceRole
      ManagedPolicyArns:
       - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole 
      
      
  # CodeDeployApplication:
  #   Type: AWS::CodeDeploy::Application
  #   Properties:
  #     ApplicationName: csye6225-webapp
  #     ComputePlatform: EC2/On-premises

  # DeploymentGroup:
  #   Type: AWS::CodeDeploy::DeploymentGroup
  #   Properties:
  #       ApplicationName: !Ref CodeDeployApplication
  #       AutoRollbackConfiguration:
  #         AutoRollbackConfiguration
  #       AutoScalingGroups:
  #         - 字符串
  #       Deployment:
  #         Deployment
  #       DeploymentConfigName: String
  #       DeploymentGroupName: csye6225-webapp-deployment
  #       DeploymentStyle: In-place
  #       Ec2TagFilters:
  #         - Ec2TagFilters
  #       Ec2TagSet: Ec2TagSet
  #       LoadBalancerInfo:
  #         LoadBalancerInfo
  #       OnPremisesInstanceTagFilters:
  #         - OnPremisesInstanceTagFilters
  #       OnPremisesInstanceTagSet: OnPremisesInstanceTagSet
  #       ServiceRoleArn: String
  #       TriggerConfigurations:
  #         - TriggerConfig


