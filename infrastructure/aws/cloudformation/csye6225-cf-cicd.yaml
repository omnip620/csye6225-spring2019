---
Description: >-
  CI/CD stack.
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  RESOURCE1:
    Type: "String"
  RESOURCE2:
    Type: "String"
  RESOURCE3:
    Type: "String"
  RESOURCE4:
    Type: "String"
  ARN:
    Type: "String"
  S3Attachments:
    Type: "String"

Resources:
  IAMPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: "circleci-ec2-ami"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - ec2:AttachVolume
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CopyImage
              - ec2:CreateImage
              - ec2:CreateKeypair
              - ec2:CreateSecurityGroup
              - ec2:CreateSnapshot
              - ec2:CreateTags
              - ec2:CreateVolume
              - ec2:DeleteKeyPair
              - ec2:DeleteSecurityGroup
              - ec2:DeleteSnapshot
              - ec2:DeleteVolume
              - ec2:DeregisterImage
              - ec2:DescribeImageAttribute
              - ec2:DescribeImages
              - ec2:DescribeInstances
              - ec2:DescribeInstanceStatus
              - ec2:DescribeRegions
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSnapshots
              - ec2:DescribeSubnets
              - ec2:DescribeTags
              - ec2:DescribeVolumes
              - ec2:DetachVolume
              - ec2:GetPasswordData
              - ec2:ModifyImageAttribute
              - ec2:ModifyInstanceAttribute
              - ec2:ModifySnapshotAttribute
              - ec2:RegisterImage
              - ec2:RunInstances
              - ec2:StopInstances
              - ec2:TerminateInstances
            Resource: '*'
      Users:
        -
          "circleci"
  CodeDeployEc2S3Policies:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: CodeDeploy-EC2-S3
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:Get*'
              - 's3:List*'
            Effect: Allow
            Resource:
              - !Sub '${ARN}/*'
              - !Ref ARN
          - Action:
              - 's3:PutObject'
              - 's3:Get*'
              - 's3:List*'
              - 's3:DeleteObject'
            Effect: Allow
            Resource:
              - !Sub '${S3Attachments}/*'
              - !Ref S3Attachments
          - Action:
            - 'cloudwatch:*'
            - 'logs:*'
            - 'ssm:*'
            - 'lambda:*'
            - 'sns:*'
            Effect: Allow
            Resource: "*"
      Roles:
        - !Ref CodeDeployEC2ServiceRole
        - !Ref CodeDeployServiceRole
      Users:
        -
          "circleci"
  CircleCIUploadPolicies:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: CircleCI-Upload-To-S3
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: "Allow"
            Action:
              -
                's3:PutObject'
            Resource: !Join
              - ''
              - - !Ref ARN
                - '/*'
      Users:
        -
          "circleci"
  CircleCIDeployPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: CirlceCI-Code-Deploy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'codedeploy:RegisterApplicationRevision'
              - 'codedeploy:GetApplicationRevision'
            Resource:
              - !Ref RESOURCE1
          - Effect: Allow
            Action:
              - 'codedeploy:CreateDeployment'
              - 'codedeploy:GetDeployment'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'codedeploy:GetDeploymentConfig'
            Resource:
              - !Ref RESOURCE2
              - !Ref RESOURCE3
              - !Ref RESOURCE4
      Users:
        - "circleci"
  CreatStackPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: Creat-Stack-Policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: "Allow"
            Action:
              - 'cloudformation:CreateStack'
              - 'cloudformation:DeleteStack'
              - 'cloudformation:DescribeStacks'
              - 'iam:*'
            Resource: '*'
      Users:
        -
          "circleci"
  CodeDeployEC2ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - "ec2.amazonaws.com"
          Action:
            - "sts:AssumeRole"
      Path: "/"
      RoleName: CodeDeployEC2ServiceRole
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - "codedeploy.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      RoleName: CodeDeployServiceRole
      ManagedPolicyArns:
       - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      Path: "/"

  Ec2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      InstanceProfileName: "EC2profile"
      Path: "/"
      Roles:
        - !Ref CodeDeployEC2ServiceRole

  myLogGroup:
   Type: AWS::Logs::LogGroup
   Properties:
    LogGroupName : csye6225_spring2019
    RetentionInDays: 7

  LogStream:
    Type: AWS::Logs::LogStream
    DependsOn: myLogGroup
    Properties:
      LogGroupName: "csye6225_spring2019"
      LogStreamName: "webapp"

Outputs:
  VPC:
    Description: CodeDeployServiceRole ARN
    Value:
      !GetAtt CodeDeployServiceRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-CodeDeployServiceRole